{"version":3,"sources":["components/DisplayWeather.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayWeather","props","data","iconurl","cod","weather","icon","className","Fragment","name","sys","country","Date","toLocaleTimeString","Math","floor","main","temp","src","alt","srcset","description","temp_max","temp_min","humidity","pressure","visibility","wind","speed","deg","sunrise","sunset","message","Weather","useState","setWeather","city","form","setForm","APIKEY","e","a","preventDefault","alert","fetch","then","res","json","handleChange","target","value","console","log","type","placeholder","onChange","onClick","weatherData","undefined","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b19f4149.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./displayweather.css\";\nfunction DisplayWeather(props) {\n  const { data } = props;\n  const iconurl =\n    \"http://openweathermap.org/img/wn/\" +\n    `${data.cod != 404 ? data.weather[0].icon : null}` +\n    \".png\";\n  return (\n    <div className=\"displayweather\">\n      {data.cod != 404 ? (\n        <React.Fragment>\n          <div className=\"maincard\">\n            <span className=\"cardtitle\">\n              {data.name} , {data.sys.country}. Weather\n            </span>\n            <span className=\"cardsubtitle\">\n              As of {new Date().toLocaleTimeString()}\n            </span>\n\n            <h1>\n              {\" \"}\n              {Math.floor(data.main.temp - 273.15)}\n              <sup>o</sup>\n            </h1>\n            <span className=\"weather-main\">{data.weather[0].main}</span>\n            <img className=\"weather-icon\" src={iconurl} alt=\"\" srcset=\"\" />\n            <span className=\"weather-description\">\n              {\" \"}\n              {data.weather[0].description}\n            </span>\n          </div>\n          <div className=\"weatherdetails\">\n            <div className=\"section1\">\n              <table>\n                <tr>\n                  <td>\n                    <h4>High/Low</h4>\n                  </td>\n                  <td>\n                    <span>\n                      {Math.floor(data.main.temp_max - 273.15)}/\n                      {Math.floor(data.main.temp_min - 273.15)}\n                    </span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <h4>Humidity</h4>\n                  </td>\n                  <td>\n                    <span>{data.main.humidity} %</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <h4>Pressure</h4>\n                  </td>\n                  <td>\n                    <span>{data.main.pressure} hPa</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <h4>Visibility</h4>\n                  </td>\n                  <td>\n                    <span>{data.visibility / 1000} Km</span>\n                  </td>\n                </tr>\n              </table>\n            </div>\n\n            <div className=\"section2\">\n              <table>\n                <tr>\n                  <td>\n                    <h4>Wind</h4>\n                  </td>\n                  <td>\n                    <span>{Math.floor((data.wind.speed * 18) / 5)} km/hr</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <h4>Wind Direction</h4>\n                  </td>\n                  <td>\n                    <span>\n                      {data.wind.deg}\n                      <sup>o</sup> deg\n                    </span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <h4>Sunrise</h4>\n                  </td>\n                  <td>\n                    <span>\n                      {new Date(data.sys.sunrise * 1000).toLocaleTimeString()}\n                    </span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <h4>Sunset</h4>\n                  </td>\n                  <td>\n                    <span>\n                      {new Date(data.sys.sunset * 1000).toLocaleTimeString()}\n                    </span>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </React.Fragment>\n      ) : (\n        <div className=\"maincard\">\n          <h2>{data.message}</h2>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DisplayWeather;\n","import React, { useState } from \"react\";\nimport DisplayWeather from \"./DisplayWeather\";\nimport \"./weather.css\";\n\nfunction Weather() {\n  const [weather, setWeather] = useState([]);\n  const [form, setForm] = useState({\n    city: \"\",\n    country: \"\",\n  });\n\n  // 270f0aaac37932378fce6e8f124828c6\n\n  const APIKEY = \"e19bc56d35c8a8c0ce5c11b6a0c79f02\";\n  async function weatherData(e) {\n    e.preventDefault();\n    if (!form.city) {\n      alert(\"Add values\");\n    } else {\n      const data = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&APPID=${APIKEY}`\n      )\n        .then((res) => res.json())\n        .then((data) => data);\n      setWeather({ data: data });\n    }\n  }\n\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    console.log(name, value);\n\n    if (name == \"city\") {\n      setForm({ city: value });\n    }\n    if (name == \"country\") {\n      setForm({ country: value });\n    }\n  };\n\n  return (\n    <div className=\"weather\">\n      <div className=\"title\">\n        <div>Weather App</div>\n        <br />\n      </div>\n\n      <form className=\"form\">\n        <input\n          type=\"text\"\n          placeholder=\"City Name (Required)\"\n          name=\"city\"\n          onChange={(e) => handleChange(e)}\n        />\n        &nbsp; &nbsp; &nbsp;&nbsp;\n        <input\n          type=\"text\"\n          placeholder=\"Country Name (Optional)\"\n          name=\"country\"\n          onChange={(e) => handleChange(e)}\n        />\n        <button className=\"getweather\" onClick={(e) => weatherData(e)}>\n          Submit\n        </button>\n      </form>\n\n      {console.log(weather)}\n      {weather.data != undefined ? (\n        <div>\n          <DisplayWeather data={weather.data} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Weather;\n","import Weather from \"./components/Weather\";\n\nfunction App() {\n  return <Weather />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}