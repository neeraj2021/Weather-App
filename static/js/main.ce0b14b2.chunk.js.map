{"version":3,"sources":["components/DisplayWeather.js","components/Weather.js","App.js","index.js"],"names":["DisplayWeather","props","data","iconurl","cod","weather","icon","className","name","sys","country","Date","toLocaleTimeString","Math","floor","main","temp","src","alt","srcSet","description","temp_max","temp_min","humidity","pressure","wind","speed","sunrise","sunset","message","Weather","useState","setWeather","loading","setLoading","isErr","setIsErr","city","form","setForm","fetchData","a","fetch","then","res","json","useEffect","handleChange","e","target","value","onSubmit","preventDefault","init","type","placeholder","required","onChange","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce0b14b2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./displayweather.css\";\nfunction DisplayWeather(props) {\n  const { data } = props;\n  const iconurl =\n    \"http://openweathermap.org/img/wn/\" +\n    `${data.cod !== 404 ? data.weather[0].icon : null}` +\n    \".png\";\n  return (\n    <div className=\"displayweather\">\n      {data.cod !== 404 ? (\n        <>\n          <div className=\"maincard\">\n            <span className=\"cardtitle\">\n              {data.name} , {data.sys.country}. Weather\n            </span>\n            <span className=\"cardsubtitle\">\n              As of {new Date().toLocaleTimeString()}\n            </span>\n\n            <h1>\n              {Math.floor(data.main.temp - 273.15)}\n              <sup>o</sup>\n            </h1>\n            <span className=\"weather-main\">{data.weather[0].main}</span>\n            <img className=\"weather-icon\" src={iconurl} alt=\"\" srcSet=\"\" />\n            <span className=\"weather-description\">\n              {data.weather[0].description}\n            </span>\n          </div>\n          <div className=\"weatherdetails\">\n            <div className=\"section1\">\n              <table>\n                <thead>\n                  <tr>\n                    <td>\n                      <h4>High/Low</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {Math.floor(data.main.temp_max - 273.15)}/\n                        {Math.floor(data.main.temp_min - 273.15)}\n                      </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h4>Humidity</h4>\n                    </td>\n                    <td>\n                      <span>{data.main.humidity} %</span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h4>Pressure</h4>\n                    </td>\n                    <td>\n                      <span>{data.main.pressure} hPa</span>\n                    </td>\n                  </tr>\n                </thead>\n              </table>\n            </div>\n\n            <div className=\"section2\">\n              <table>\n                <thead>\n                  <tr>\n                    <td>\n                      <h4>Wind</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {Math.floor((data.wind.speed * 18) / 5)} km/hr\n                      </span>\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <td>\n                      <h4>Sunrise</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {new Date(data.sys.sunrise * 1000).toLocaleTimeString()}\n                      </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h4>Sunset</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {new Date(data.sys.sunset * 1000).toLocaleTimeString()}\n                      </span>\n                    </td>\n                  </tr>\n                </thead>\n              </table>\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"maincard\">\n          <h2>{data.message}</h2>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DisplayWeather;\n","import React, { useState, useEffect } from \"react\";\nimport DisplayWeather from \"./DisplayWeather\";\nimport \"./weather.css\";\n\nfunction Weather() {\n  const [weather, setWeather] = useState();\n  const [loading, setLoading] = useState(true);\n  const [isErr, setIsErr] = useState(false);\n\n  const [form, setForm] = useState({\n    city: \"\",\n    country: \"\",\n  });\n\n  const APIKEY = \"e19bc56d35c8a8c0ce5c11b6a0c79f02\";\n\n  const fetchData = async function () {\n    return fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&APPID=${APIKEY}`\n    )\n      .then((res) => res.json())\n      .then((data) => data);\n  };\n\n  function weatherData(e) {\n    e.preventDefault();\n    setLoading(true);\n    setIsErr(false);\n    let init = async function () {\n      setLoading(true);\n\n      const data = await fetchData();\n      // console.log(\"data = \", data);\n      if (data.cod === \"404\") setIsErr(true);\n      setWeather(data);\n      // console.log(\"weather = \", data);\n      setLoading(false);\n    };\n    init();\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    setIsErr(false);\n  }, []);\n\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    // console.log(name, value);\n    if (name === \"city\") {\n      setForm({ city: value });\n    }\n    if (name === \"country\") {\n      setForm({ country: value });\n    }\n  };\n\n  return (\n    <div className=\"weather\">\n      <div className=\"title\">\n        <div>Weather App</div>\n        <br />\n      </div>\n\n      <form className=\"form\" onSubmit={weatherData}>\n        <input\n          type=\"text\"\n          placeholder=\"City Name (Required)\"\n          name=\"city\"\n          required\n          value={form.city}\n          onChange={(e) => handleChange(e)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Country Name (Optional)\"\n          name=\"country\"\n          onChange={(e) => handleChange(e)}\n        />\n        <button type=\"submit\" className=\"getweather\">\n          Submit\n        </button>\n      </form>\n\n      {loading ? (\n        <div></div>\n      ) : isErr ? (\n        <h3>City Not Found</h3>\n      ) : (\n        <div>{<DisplayWeather data={weather} />}</div>\n      )}\n    </div>\n  );\n}\n\nexport default Weather;\n","import Weather from \"./components/Weather\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"background\">\n      <Weather />;\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n// reportWebVitals();\n"],"sourceRoot":""}