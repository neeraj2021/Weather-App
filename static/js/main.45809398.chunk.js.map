{"version":3,"sources":["components/DisplayWeather.js","components/Weather.js","App.js","index.js"],"names":["DisplayWeather","props","data","iconurl","cod","weather","icon","className","name","sys","country","Date","toLocaleTimeString","Math","floor","main","temp","src","alt","srcSet","description","temp_max","temp_min","humidity","pressure","wind","speed","sunrise","sunset","message","Weather","useState","setWeather","loading","setLoading","isErr","setIsErr","history","setHistory","city","setCity","fetchData","a","fetch","then","res","json","useEffect","type","placeholder","required","value","onChange","e","target","onClick","preventDefault","d","undefined","cityName","cityTemp","init","map","ele","index","style","margin","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45809398.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./displayweather.css\";\n\nfunction DisplayWeather(props) {\n  const { data } = props;\n  const iconurl =\n    \"http://openweathermap.org/img/wn/\" +\n    `${data.cod !== 404 ? data.weather[0].icon : null}` +\n    \".png\";\n  return (\n    <div className=\"displayweather\">\n      {data.cod !== 404 ? (\n        <>\n          <div className=\"maincard\">\n            <span className=\"cardtitle\">\n              {data.name} , {data.sys.country}. Weather\n            </span>\n            <span className=\"cardsubtitle\">\n              As of {new Date().toLocaleTimeString()}\n            </span>\n\n            <h1>\n              {Math.floor(data.main.temp - 273.15)}\n              <sup>o</sup>C\n            </h1>\n            <span className=\"weather-main\">{data.weather[0].main}</span>\n            <img className=\"weather-icon\" src={iconurl} alt=\"\" srcSet=\"\" />\n            <span className=\"weather-description\">\n              {data.weather[0].description}\n            </span>\n          </div>\n          <div className=\"weatherdetails\">\n            <div className=\"section1\">\n              <table>\n                <thead>\n                  <tr>\n                    <td>\n                      <h4>High/Low</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {Math.floor(data.main.temp_max - 273.15)}/\n                        {Math.floor(data.main.temp_min - 273.15)}\n                      </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h4>Humidity</h4>\n                    </td>\n                    <td>\n                      <span>{data.main.humidity} %</span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h4>Pressure</h4>\n                    </td>\n                    <td>\n                      <span>{data.main.pressure} hPa</span>\n                    </td>\n                  </tr>\n                </thead>\n              </table>\n            </div>\n\n            <div className=\"section2\">\n              <table>\n                <thead>\n                  <tr>\n                    <td>\n                      <h4>Wind</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {Math.floor((data.wind.speed * 18) / 5)} km/hr\n                      </span>\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <td>\n                      <h4>Sunrise</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {new Date(data.sys.sunrise * 1000).toLocaleTimeString()}\n                      </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h4>Sunset</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {new Date(data.sys.sunset * 1000).toLocaleTimeString()}\n                      </span>\n                    </td>\n                  </tr>\n                </thead>\n              </table>\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"maincard\">\n          <h2>{data.message}</h2>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DisplayWeather;\n","import React, { useState, useEffect } from \"react\";\nimport DisplayWeather from \"./DisplayWeather\";\nimport \"./weather.css\";\n\nfunction Weather() {\n  const [weather, setWeather] = useState();\n  const [loading, setLoading] = useState(true);\n  const [isErr, setIsErr] = useState(false);\n\n  const [history, setHistory] = useState([]);\n\n  const [city, setCity] = useState(\"\");\n\n  const APIKEY = \"e19bc56d35c8a8c0ce5c11b6a0c79f02\";\n\n  const fetchData = async function () {\n    // console.log(history);\n    return fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${APIKEY}`\n    )\n      .then((res) => res.json())\n      .then((data) => data);\n  };\n\n  function weatherData(e) {\n    e.preventDefault();\n    setLoading(true);\n    setIsErr(false);\n\n    let d = 0;\n    while (d < 1000) d++;\n\n    let init = async function () {\n      setLoading(true);\n\n      const data = await fetchData();\n      // console.log(\"data = \", data);\n      if (data.cod === \"404\") setIsErr(true);\n      setWeather(data);\n      if (data.name !== undefined) {\n        setHistory([\n          { cityName: data.name, cityTemp: data.main.temp },\n          ...history,\n        ]);\n        // console.log(\"weather = \", data);\n      }\n      // console.log(history);\n      setLoading(false);\n    };\n    init();\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    setIsErr(false);\n  }, []);\n\n  return (\n    <div className=\"weather\">\n      <div className=\"title\">\n        <div>Weather App</div>\n        <br />\n      </div>\n\n      <form className=\"form\">\n        <input\n          type=\"text\"\n          placeholder=\"City Name (Required)\"\n          name=\"city\"\n          required\n          value={city}\n          onChange={(e) => {\n            setLoading(true);\n            setIsErr(false);\n            setCity(e.target.value);\n          }}\n        />\n        <button type=\"submit\" className=\"getweather\" onClick={weatherData}>\n          Submit\n        </button>\n      </form>\n\n      {loading ? (\n        <div></div>\n      ) : isErr ? (\n        <h3>City Not Found</h3>\n      ) : (\n        <>\n          <div>{<DisplayWeather data={weather} />}</div>\n          <br />\n          <br />\n          <hr />\n          <hr />\n          <br />\n          <br />\n        </>\n      )}\n      <h2>Previous Search</h2>\n\n      {history.map((ele, index) => {\n        return (\n          <h4 key={index}>\n            <span style={{ margin: \"1px 25px 0px 0px\" }}>{ele.cityName}</span>\n            <span>\n              {Math.floor(ele.cityTemp - 273.15)}\n              <sup>o</sup>C\n            </span>\n          </h4>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Weather;\n","import Weather from \"./components/Weather\";\n\nfunction App() {\n  return (\n    <div>\n      <Weather />;\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}