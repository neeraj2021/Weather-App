{"version":3,"sources":["components/DisplayWeather.js","components/Weather.js","App.js","index.js"],"names":["DisplayWeather","props","data","iconurl","cod","weather","icon","className","name","sys","country","Date","toLocaleTimeString","Math","floor","main","temp","src","alt","srcSet","description","temp_max","temp_min","humidity","pressure","wind","speed","sunrise","sunset","message","Weather","useState","setWeather","city","form","setForm","APIKEY","e","a","preventDefault","alert","fetch","then","res","json","handleChange","target","value","type","placeholder","onChange","onClick","weatherData","undefined","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2928be7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./displayweather.css\";\nfunction DisplayWeather(props) {\n  const { data } = props;\n  const iconurl =\n    \"http://openweathermap.org/img/wn/\" +\n    `${data.cod !== 404 ? data.weather[0].icon : null}` +\n    \".png\";\n  return (\n    <div className=\"displayweather\">\n      {data.cod !== 404 ? (\n        <>\n          <div className=\"maincard\">\n            <span className=\"cardtitle\">\n              {data.name} , {data.sys.country}. Weather\n            </span>\n            <span className=\"cardsubtitle\">\n              As of {new Date().toLocaleTimeString()}\n            </span>\n\n            <h1>\n              {Math.floor(data.main.temp - 273.15)}\n              <sup>o</sup>\n            </h1>\n            <span className=\"weather-main\">{data.weather[0].main}</span>\n            <img className=\"weather-icon\" src={iconurl} alt=\"\" srcSet=\"\" />\n            <span className=\"weather-description\">\n              {data.weather[0].description}\n            </span>\n          </div>\n          <div className=\"weatherdetails\">\n            <div className=\"section1\">\n              <table>\n                <thead>\n                  <tr>\n                    <td>\n                      <h4>High/Low</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {Math.floor(data.main.temp_max - 273.15)}/\n                        {Math.floor(data.main.temp_min - 273.15)}\n                      </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h4>Humidity</h4>\n                    </td>\n                    <td>\n                      <span>{data.main.humidity} %</span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h4>Pressure</h4>\n                    </td>\n                    <td>\n                      <span>{data.main.pressure} hPa</span>\n                    </td>\n                  </tr>\n                </thead>\n              </table>\n            </div>\n\n            <div className=\"section2\">\n              <table>\n                <thead>\n                  <tr>\n                    <td>\n                      <h4>Wind</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {Math.floor((data.wind.speed * 18) / 5)} km/hr\n                      </span>\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <td>\n                      <h4>Sunrise</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {new Date(data.sys.sunrise * 1000).toLocaleTimeString()}\n                      </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h4>Sunset</h4>\n                    </td>\n                    <td>\n                      <span>\n                        {new Date(data.sys.sunset * 1000).toLocaleTimeString()}\n                      </span>\n                    </td>\n                  </tr>\n                </thead>\n              </table>\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"maincard\">\n          <h2>{data.message}</h2>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DisplayWeather;\n","import React, { useState } from \"react\";\nimport DisplayWeather from \"./DisplayWeather\";\nimport \"./weather.css\";\n\nfunction Weather() {\n  const [weather, setWeather] = useState([]);\n  const [form, setForm] = useState({\n    city: \"\",\n    country: \"\",\n  });\n\n  const APIKEY = \"e19bc56d35c8a8c0ce5c11b6a0c79f02\";\n\n  async function weatherData(e) {\n    e.preventDefault();\n    if (!form.city) {\n      alert(\"City Name Can't be Empty\");\n    } else {\n      const data = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&APPID=${APIKEY}`\n      )\n        .then((res) => res.json())\n        .then((data) => data);\n      setWeather({ data: data });\n    }\n  }\n\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    // console.log(name, value);\n\n    if (name === \"city\") {\n      setForm({ city: value });\n    }\n    if (name === \"country\") {\n      setForm({ country: value });\n    }\n  };\n\n  return (\n    <div className=\"weather\">\n      <div className=\"title\">\n        <div>Weather App</div>\n        <br />\n      </div>\n\n      <form className=\"form\">\n        <input\n          type=\"text\"\n          placeholder=\"City Name (Required)\"\n          name=\"city\"\n          value={form.city}\n          onChange={(e) => handleChange(e)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Country Name (Optional)\"\n          name=\"country\"\n          onChange={(e) => handleChange(e)}\n        />\n        <button className=\"getweather\" onClick={(e) => weatherData(e)}>\n          Submit\n        </button>\n      </form>\n\n      {/* {console.log(weather)} */}\n      {weather.data !== undefined ? (\n        <div>\n          <DisplayWeather data={weather.data} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Weather;\n","import Weather from \"./components/Weather\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"background\">\n      <Weather />;\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n// reportWebVitals();\n"],"sourceRoot":""}